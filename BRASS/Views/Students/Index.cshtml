@using BRASS.Models.PageModels;
@model StudentPage

@{
    ViewData["Title"] = "Index";
}

<h2>Students</h2>

<div class="row col-lg-12" style="margin-top:1%">
    <div class="col-lg-12">
        <div class="col-lg-12">
            <div class="form-group col-lg-12">
                <label for="RouteDropdown">Select A Route</label>
                @Html.DropDownListFor(m => m.RouteId, Model.RouteList, "All Routes", new { @id = "RouteDropdown", @onchange = "TableUpdate()" })
            </div>
            <div class="col-lg-12" style="overflow-y:auto;overflow-x:visible;max-height:70vh">
                <table class="table table-hover" id="StudentTable">
                    <thead>
                        <tr class="table-primary">
                            <th>@Html.DisplayNameFor(model => model.FirstName)</th>
                            <th>@Html.DisplayNameFor(model => model.LastName)</th>
                            <th>@Html.DisplayNameFor(model => model.StreetAddress)</th>
                            <th>@Html.DisplayNameFor(model => model.City)</th>
                            <th>@Html.DisplayNameFor(model => model.ZipCode)</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.StudentList)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                                <td>@Html.DisplayFor(modelItem => item.StreetAddress)</td>
                                <td>@Html.DisplayFor(modelItem => item.City)</td>
                                <td>@Html.DisplayFor(modelItem => item.ZipCode)</td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.StudentId">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@item.StudentId">Details</a> |
                                    <a asp-action="Delete" asp-route-id="@item.StudentId">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    </div>
</div>
<style>
    .container {
        max-width: 100vw
    }

    table {
        vertical-align: middle;
        text-align: center
    }

    th {
        padding: 2rem 0.5rem !important;
        white-space: nowrap !important;
    }

    #AddStudent #UpdateStudent {
        margin: 0% 10%
    }
</style>
<script src="~/js/AccessTokenControl.js"></script>
<script>
    function TableUpdate() {
        var x = $("#RouteDropdown").val();
        $.ajax({
            url: "/Students/GetStudentsOnRoute",
            data: { "id": parseInt(x) },
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            success: function (data, status, xhr) {

                var thead_content = '';

                thead_content += '<tr class="table-primary">';
                thead_content += '<th>First Name</th>';
                thead_content += '<th>Last Name</th>';
                thead_content += '<th>Street Address</th>';
                thead_content += '<th>City</th>';
                thead_content += '<th>Zip Code</th>';
                thead_content += '<th></th>';
                thead_content += '</tr>';

                $('#StudentTable thead').html(thead_content);

                var tbody_content = '';

                for(let i = 0; i < data.length; i++) {
                    tbody_content += '<tr></tr>';
                    tbody_content += '<td>' + data[i].firstName + '</td>';
                    tbody_content += '<td>' + data[i].lastName + '</td>';
                    tbody_content += '<td>' + data[i].streetAddress + '</td>';
                    tbody_content += '<td>' + data[i].city + '</td>';
                    tbody_content += '<td>' + data[i].zipCode + '</td>';
                    tbody_content += '<td><a asp-action="Edit" asp-route-id="' + data[i].StudentId +
                        '">Edit</a> | <a asp-action="Details" asp-route-id="' + +data[i].StudentId +
                        '">Details</a> | <a asp-action="Delete" asp-route-id="' + data[i].StudentId + '">Delete</a></td>';
                }

                $('#StudentTable tbody').html(tbody_content);
            },
            error: function (xhr, status, error) {
                var err = eval("(" + xhr.responseText + ")");
                alert(err.Message);
            }
        });
    }



    ArcGisAPIController(AddressToGeo, ["5834 Vine Street", "Clifton", "45220"])

    // ToDo: Need to be called from where 
    function AddressToGeo(token, streetAddress, city, zipCode) {
        var address = streetAddress + " " + city + " " + zipCode;

        var options = {
            "url": "https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/findAddressCandidates",
            "method": "GET",
            "timeout": 0,
            "headers":
                { 'content-type': 'application/x-www-form-urlencoded' },
            "data": {
                "f": "json",
                "token": token,
                "singleLine": address
            }
        };

        $.ajax(options)
            .done(function (response) {
                // location is define as {x,y}
                location = response.location;
                console.log(response);
                // ToDo: needs call to database to set stop
            })
            .fail(function (xhr, status, error) {
                console.log("Error in AddressToGeo: " + error);
            });
    }

</script>


